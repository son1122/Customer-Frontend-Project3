[{"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/index.js":"1","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/reportWebVitals.js":"2","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/App.js":"3","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Login.js":"4","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Fruits.js":"5","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/FruitForm.js":"6","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Signup/Signup.js":"7","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Login/Login.js":"8","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Dashboard/Dashboard.js":"9","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Profile/Profile.js":"10"},{"size":803,"mtime":1672495497000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1671703508000,"results":"13","hashOfConfig":"12"},{"size":1222,"mtime":1672500432457,"results":"14","hashOfConfig":"12"},{"size":1096,"mtime":1672491962063,"results":"15","hashOfConfig":"12"},{"size":533,"mtime":1672495497000,"results":"16","hashOfConfig":"12"},{"size":1256,"mtime":1672495497000,"results":"17","hashOfConfig":"12"},{"size":5212,"mtime":1672496462588,"results":"18","hashOfConfig":"12"},{"size":2144,"mtime":1672495497000,"results":"19","hashOfConfig":"12"},{"size":6464,"mtime":1672589639809,"results":"20","hashOfConfig":"12"},{"size":7103,"mtime":1672590624559,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdvttj",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/index.js",[],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/reportWebVitals.js",[],[],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/App.js",["56","57","58"],[],"import './App.css';\nimport React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport Fruit from \"./components/Fruits\"\nimport Login from './components/Login/Login';\nimport Signup from \"./components/Signup/Signup\";\nimport {Route, Routes, Navigate} from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Profile from \"./components/Profile/Profile\";\n\nfunction App() {\n\n  const [fruits, setFruits] = useState([])\n\n  const getFruits = () => {\n    console.log(localStorage.getItem(\"jwt\"));\n    axios.get('http://localhost:3001/customer', {\n      headers: {Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`}\n    })\n    .then(res => {\n\n      console.log(res.data);\n\n    })\n  }\n\n  useEffect(() => {\n    getFruits()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Routes>\n          <Route path=\"/\" element={ <Navigate to=\"/login\" /> } />\n          <Route path=\"/signup\" element={<Signup/>}/>\n          <Route path=\"/login\" element={<Login/>} />\n          <Route path=\"/dashboard\" element={<Dashboard/>} />\n          <Route path=\"/profile\" element={<Profile/>} />\n            <Route path=\"*\" element={<Login/>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Login.js",[],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Fruits.js",[],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/FruitForm.js",[],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Signup/Signup.js",["59","60"],[],"import \"./Signup.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst Signup = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const navigate = useNavigate();\n  function validateEmail() {\n    const regex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (regex.test(email)) {\n      return true;\n    } else {\n      alert(\"Please enter a valid email\");\n      return false;\n    }\n  }\n\n  //make sure entered password is correct regex\n  function validatePassword() {\n    const regex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n    if (password === confirmPassword) {\n      if (regex.test(password)) {\n        return true;\n      } else {\n        alert(\n          \"Password must have at least: 1 lowercase, 1 uppercase, 1 number at least 8 character and 1 special character\"\n        );\n        return false;\n      }\n    } else {\n      alert(\"password not match\");\n    }\n  }\n\n  function validateForm() {\n    if (validateEmail() && validatePassword()) {\n      axios\n        .post(`http://localhost:3001/customer/signup`, {\n          username: username,\n          password: password,\n          email: email,\n          phone: phone,\n          firstname: firstname,\n          lastname: lastname\n        })\n        .then(function (response) {\n          console.log(response.data.status);\n          if (response.data.status == \"signUp\") {\n            navigate(\"/login\");\n          } else {\n            if (\n              \"error SequelizeUniqueConstraintError: Validation error\" ==\n              response.data\n            ) {\n              alert(\"User name is already use\");\n            } else {\n              alert(\"error please try again\");\n            }\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n  // admin,password,owner@mail.com,000-000-0000\n\n  const signUp = (e) => {\n    e.preventDefault();\n    validateForm();\n  };\n  return (\n    <div className=\"main-cont\">\n      <div className=\"reg-form-cont\">\n        <div className=\"signup-form-header\">\n          <h2>Register</h2>\n        </div>\n        {/* <form onSubmit={signUp}> */}\n        <form className=\"signup-form\">\n          <h4 className=\"signup-form-lables\">First Name : </h4>\n          <input\n              className=\"signup-form-inputs\"\n              type=\"text\"\n              name=\"firstname\"\n              placeholder=\" First Name\"\n              onChange={(e) => {\n                setFirstname(e.target.value);\n              }}\n          />\n          <h4 className=\"signup-form-lables\">Last Name : </h4>\n          <input\n              className=\"signup-form-inputs\"\n              type=\"text\"\n              name=\"lastname\"\n              placeholder=\"Last Name\"\n              onChange={(e) => {\n                setLastname(e.target.value);\n              }}\n          />\n          <h4 className=\"signup-form-lables\">Username : </h4>\n          <input\n            className=\"signup-form-inputs\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\" Username\"\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n          <h4 className=\"signup-form-lables\">Password : </h4>\n          <input\n            className=\"signup-form-inputs\"\n            type=\"text\"\n            name=\"password\"\n            placeholder=\" Password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <h4 className=\"signup-form-lables\">Confirm Pass : </h4>\n          <input\n            className=\"signup-form-inputs\"\n            type=\"text\"\n            name=\"confirmPassword\"\n            placeholder=\" ConfirmPassword\"\n            onChange={(e) => {\n              setConfirmPassword(e.target.value);\n            }}\n          />\n          <h4 className=\"signup-form-lables\">Email : </h4>\n          <input\n            className=\"signup-form-inputs\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\" Email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <h4 className=\"signup-form-lables\">Phone Number : </h4>\n          <input\n            className=\"signup-form-inputs\"\n            type=\"text\"\n            name=\"phone\"\n            placeholder=\" Phone\"\n            onChange={(e) => {\n              setPhone(e.target.value);\n            }}\n          />\n          <br></br>\n        </form>\n        <div className=\"return-to-login-btn\" onClick={() => navigate(\"/login\")}>\n          Return to login page\n        </div>\n        <input\n          className=\"signup-form-btn\"\n          type=\"button\"\n          onClick={signUp}\n          value=\"SignUp\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Login/Login.js",["61"],[],"import \"./Login.css\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = (props) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({});\n\n  const handleChange = (e) => {\n    setFormData((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"http://localhost:3001/customer/login\", formData)\n      .then((res) => {\n        console.log(res.data);\n        let token = res.data;\n        localStorage.setItem(\"jwt\", token);\n        // props.setLogin(true);\n        navigate(\"/dashboard\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"login-grid-cont\">\n      <div className={\"login-grid\"}>\n        <div className=\"login-form-head\">\n          <img\n            style={{ height: \"30vh\" }}\n            src={\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\"}\n          />\n        </div>\n        <form className=\"login-form\">\n          <h4>\n            Username :{\" \"}\n            <input\n              className=\"detail-input\"\n              type={\"text\"}\n              name={\"username\"}\n              placeholder={\" Username\"}\n              onChange={handleChange}\n            />\n          </h4>\n          <br />\n          <h4>\n            Password :{\" \"}\n            <input\n              className=\"detail-input\"\n              type={\"text\"}\n              name={\"password\"}\n              placeholder={\" Password\"}\n              onChange={handleChange}\n            />\n          </h4>\n          {/* <button onClick={() => navigate(\"/signup\")}>SignUp</button> */}\n          <p className=\"signup-btn\" onClick={() => navigate(\"/signup\")}>\n            Register\n          </p>\n        </form>\n        <input\n          className=\"login-btn\"\n          type={\"button\"}\n          onClick={handleSubmit}\n          value={\"Login\"}\n        />\n        {/*<div className={\"sign-button-grid sign-button\"}>*/}\n\n        {/*</div>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Dashboard/Dashboard.js",["62","63","64","65","66","67","68","69"],[],"/Users/asd1122/Desktop/sei/projects/project-3/customer/src/components/Profile/Profile.js",["70","71","72"],[],{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":13,"column":10,"nodeType":"75","messageId":"76","endLine":13,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":13,"column":18,"nodeType":"75","messageId":"76","endLine":13,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":55,"column":36,"nodeType":"81","messageId":"82","endLine":55,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":59,"column":72,"nodeType":"81","messageId":"82","endLine":59,"endColumn":74},{"ruleId":"83","severity":1,"message":"84","line":36,"column":11,"nodeType":"85","endLine":39,"endColumn":13},{"ruleId":"73","severity":1,"message":"86","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":16},{"ruleId":"73","severity":1,"message":"87","line":17,"column":10,"nodeType":"75","messageId":"76","endLine":17,"endColumn":18},{"ruleId":"73","severity":1,"message":"88","line":20,"column":9,"nodeType":"75","messageId":"76","endLine":20,"endColumn":21},{"ruleId":"73","severity":1,"message":"89","line":41,"column":11,"nodeType":"75","messageId":"76","endLine":41,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":64,"column":9,"nodeType":"92","messageId":"93","endLine":64,"endColumn":10,"fix":"94"},{"ruleId":"73","severity":1,"message":"95","line":75,"column":17,"nodeType":"75","messageId":"76","endLine":75,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":84,"column":5,"nodeType":"98","endLine":84,"endColumn":7,"suggestions":"99"},{"ruleId":"83","severity":1,"message":"84","line":99,"column":17,"nodeType":"85","endLine":102,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":55,"column":36,"nodeType":"81","messageId":"82","endLine":55,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":59,"column":72,"nodeType":"81","messageId":"82","endLine":59,"endColumn":74},{"ruleId":"73","severity":1,"message":"100","line":75,"column":9,"nodeType":"75","messageId":"76","endLine":75,"endColumn":15},"no-unused-vars","'Fruit' is defined but never used.","Identifier","unusedVar","'fruits' is assigned a value but never used.","'setFruits' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'formData' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'select' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"101","text":"102"},"'value' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalOrder'. Either include it or remove the dependency array. You can also do a functional update 'setTotalOrder(t => ...)' if you only need 'totalOrder' in the 'setTotalOrder' call.","ArrayExpression",["103"],"'signUp' is assigned a value but never used.",[1955,1963],"\n      .",{"desc":"104","fix":"105"},"Update the dependencies array to be: [totalOrder]",{"range":"106","text":"107"},[2524,2526],"[totalOrder]"]